{{ if and (ne .Values.environment "ci") ( .Values.alertRules.create ) }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: w3f
    origin: {{ .Values.origin }}    
  name: alertmanager
  {{ if .Values.alertRules.namespace }}
  namespace: {{ .Values.alertRules.namespace }}
  {{ end }}
spec:
  groups:
  - name: alertmanager.rules
    rules:
    - alert: AlertmanagerConfigInconsistent
      annotations:
        message: The configuration of the instances of the Alertmanager cluster `{{`{{$labels.service}}`}}`
          are out of sync.
      expr: |
        count_values("config_hash", alertmanager_config_hash{job="kube-prometheus-stack-alertmanager"}) BY (service) / ON(service) GROUP_LEFT() label_replace(prometheus_operator_alertmanager_spec_replicas{job="kube-prometheus-stack-operator"}, "service", "alertmanager-$1", "alertmanager", "(.*)") != 1
      for: 5m
      labels:
        severity: critical
        origin: {{ .Values.origin }}
    - alert: AlertmanagerFailedReload
      annotations:
        message: Reloading Alertmanager's configuration has failed for {{`{{ $labels.namespace
          }}`}}/{{`{{ $labels.pod}}`}}.
      expr: |
        alertmanager_config_last_reload_successful{job="kube-prometheus-stack-alertmanager"} == 0
      for: 10m
      labels:
        severity: warning
        origin: {{ .Values.origin }}
    - alert: heartbeat
      expr: vector(1)
      labels:
        severity: heartbeat
        origin: {{ .Values.origin }}
      annotations:
        message: Test alert. no action required
        summary: Test alert. no action required
        documentation: None
        runbook_url: "https://github.com/w3f/SecOps/wiki/Opsgenie"


{{ end }}
